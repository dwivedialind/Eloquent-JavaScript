1. Abstraction: Abstractions hide details and give us the ability to talk about problems at a higher level.
2. Abstracting Repetition
Pass function value as arguments
example00.js

3. Functions that operate on other functions, either by taking them as arguments or by returning them, are called
higher-order functions. Functions are regular values.

Higher-order functions allow us to abstract over actions, not just values.
Abstraction in the context of higher-order functions means creating functions that can work with different values or actions
without specifying them explicitly.
When we talk about abstraction over values, we mean creating functions that can operate on different data values without specifying those values explicitly.
Abstraction over actions extends this idea to functions. Instead of creating functions that work with specific actions, we create higher-order functions that can operate on different actions. 

There is built-in array method, forEach, that provides something like a for/of loop as a higher-order function.

example01.js
Filtering arrays
Filter function, rather than deleting elements from the existing array, builds up a new array with only the elements that pass the test. This function is pure. It does not modify the array it is given.

4. Transforming with MAP
The map method transforms an array by applying a function to all of its element and building a new array from the returned values. The new array will have the same length as the input array, but its 
content will have been mapped to a new form by the function.

